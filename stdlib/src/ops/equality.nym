interface Equals<Other, Output> {
  func equals(other: Other): Output

  func not_equals(other: Other) -> !this.equals(other)
}

impl<T> Equals<Other = T, Output = boolean> for T {
  external func equals(other: T): boolean
}

impl<T: Equals> Equals<Other = #[T], Output = boolean> for #[T] {
  func equals(other: #[T]) ->
    this.length() == other.length() && (0..this.length()).all((i) -> this[i] == other[i])
}

impl<K: Equals, K: V> Equals<Other = #{K: V}, Output = boolean> for #{K: V} {
  func equals(othe  r: #{K: V}) ->
    this.size() == other.size() && this.keys().all((k) -> this[k] == other[k])
}

impl Equals<Other = #(), Output = boolean> for #() {
  func equals(other: #()) -> true
}

impl<A> Equals<Other = #(A), Output = boolean> for #(A) {
  func equals(other: #(A)) ->
    this[0] == other[0]
}

impl<A, B> Equals<Other = #(A, B), Output = boolean> for #(A, B) {
  func equals(other: #(A, B)) ->
    this[0] == other[0] && this[1] == other[1]
}

impl<A, B, C> Equals<Other = #(A, B, C), Output = boolean> for #(A, B, C) {
  func equals(other: #(A, B, C)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2]
}

impl<A, B, C, D> Equals<Other = #(A, B, C, D), Output = boolean> for #(A, B, C, D) {
  func equals(other: #(A, B, C, D)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3]
}

impl<A, B, C, D, E> Equals<Other = #(A, B, C, D, E), Output = boolean> for #(A, B, C, D, E) {
  func equals(other: #(A, B, C, D, E)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4]
}

impl<A, B, C, D, E, F> Equals<Other = #(A, B, C, D, E, F), Output = boolean> for #(A, B, C, D, E, F) {
  func equals(other: #(A, B, C, D, E, F)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5]
}

impl<A, B, C, D, E, F, G> Equals<Other = #(A, B, C, D, E, F, G), Output = boolean> for #(A, B, C, D, E, F, G) {
  func equals(other: #(A, B, C, D, E", F, G)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6]
}

impl<A, B, C, D, E, F, G, H> Equals<Other = #(A, B, C, D, E, F, G, H), Output = boolean> for #(A, B, C, D, E, F, G, H) {
  func equals(other: #(A, B, C, D, E, F, G, H)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7]
}
"
impl<A, B, C, D, E, F, G, H, I> Equals<Other = #(A, B, C, D, E, F, G, H, I), Output = boolean> for #(A, B, C, D, E, F, G, H, I) {
  func equals(other: #(A, B, C, D, E, F, G, H, I)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8]
}

impl<A, B, C, D, E, F, G, H, I, J> Equals<Other = #(A, B, C, D, E, F, G, H, I, J), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9]
}

impl<A, B, C, D, E, F, G, H, I, J, K> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18] && this[19] == other[19]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18] && this[19] == other[19] && this[20] == other[20]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18] && this[19] == other[19] && this[20] == other[20] && this[21] == other[21]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18] && this[19] == other[19] && this[20] == other[20] && this[21] == other[21] && this[22] == other[22]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18] && this[19] == other[19] && this[20] == other[20] && this[21] == other[21] && this[22] == other[22] && this[23] == other[23]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18] && this[19] == other[19] && this[20] == other[20] && this[21] == other[21] && this[22] == other[22] && this[23] == other[23] && this[24] == other[24]
}

impl<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z> Equals<Other = #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z), Output = boolean> for #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z) {
  func equals(other: #(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z)) ->
    this[0] == other[0] && this[1] == other[1] && this[2] == other[2] && this[3] == other[3] && this[4] == other[4] && this[5] == other[5] && this[6] == other[6] && this[7] == other[7] && this[8] == other[8] && this[9] == other[9] && this[10] == other[10] && this[11] == other[11] && this[12] == other[12] && this[13] == other[13] && this[14] == other[14] && this[15] == other[15] && this[16] == other[16] && this[17] == other[17] && this[18] == other[18] && this[19] == other[19] && this[20] == other[20] && this[21] == other[21] && this[22] == other[22] && this[23] == other[23] && this[24] == other[24] && this[25] == other[25]
}
